{"remainingRequest":"C:\\Users\\admin\\Desktop\\wms-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\admin\\Desktop\\wms-web\\src\\components\\Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\admin\\Desktop\\wms-web\\src\\components\\Home.vue","mtime":1704879589929},{"path":"C:\\Users\\admin\\Desktop\\wms-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1704530833875},{"path":"C:\\Users\\admin\\Desktop\\wms-web\\node_modules\\babel-loader\\lib\\index.js","mtime":1704530835864},{"path":"C:\\Users\\admin\\Desktop\\wms-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1704530833875},{"path":"C:\\Users\\admin\\Desktop\\wms-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1704530838239}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBmaWxlRG93bmxvYWQgZnJvbSAianMtZmlsZS1kb3dubG9hZCI7CmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CgpmdW5jdGlvbiByZXF1ZXN0KGNvbmZpZykgewogIC8vIOWIm+W7umF4aW9z55qE5a6e5L6LCiAgY29uc3QgaW5zdGFuY2UgPSBheGlvcy5jcmVhdGUoewogICAgYmFzZVVSTDogJ2h0dHA6Ly9sb2NhbGhvc3Q6ODA5MCcsIC8vIOi/meS4quaYr+WQjuerr+eahGlw5Zyw5Z2ACiAgfSk7CiAgcmV0dXJuIGluc3RhbmNlKGNvbmZpZyk7Cn0KCmV4cG9ydCBmdW5jdGlvbiBnZXRSZXN1bHQocmVzdWx0ZmlsZSkgewogIHJldHVybiByZXF1ZXN0KHsKICAgIHVybDogJ2NvbXAvZ2V0UmVzdWx0JywKICAgIG1ldGhvZDogJ3Bvc3QnLAogICAgcmVzcG9uc2VUeXBlOiAnYXJyYXlidWZmZXInLAogICAgZGF0YTogewogICAgICByZXN1bHRmaWxlOiByZXN1bHRmaWxlLAogICAgICB1c2VySWQ6IEpTT04ucGFyc2Uoc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgnQ3VyVXNlcicpKS5pZCwKICAgIH0KICB9KTsKfQoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJIb21lIiwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgc2hhcmVGaWxlOicnLAogICAgICBzZWxlY3RlZFRhZ3M6IFtdLAogICAgICB0YWdzOiBbIua4uOaIjyIsICLlrabkuaAiLCAi5a2m5pyvIiwgIuWoseS5kCIsICLlt6XkvZwiXSwKICAgICAgc2VhcmNoVmFsdWU6ICcnLAogICAgICB1c2VyOiBKU09OLnBhcnNlKHNlc3Npb25TdG9yYWdlLmdldEl0ZW0oJ0N1clVzZXInKSksCiAgICAgIGZpbGVOYW1lOiAnJywKICAgICAgZGlhbG9nVmlzaWJsZTpmYWxzZSwKICAgICAgc2hhcmVVcmw6ICcnLAogICAgICB0YWJsZURhdGE6IFtdLAogICAgICBwYWdlTnVtOiAxLAogICAgICBwYWdlU2l6ZTogMTAsCiAgICAgIHRvdGFsOiAwLAogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgZmV0Y2hVc2VyU3VnZ2VzdGlvbnMocXVlcnlTdHJpbmcsIGNhbGxiYWNrKSB7CiAgICAgIC8vIOS7juWQjuWPsOiOt+WPlueUqOaIt+WQjeWIl+ihqAogICAgICAvLyDor7fmoLnmja7kvaDnmoTlrp7pmYXmg4XlhrXkv67mlLnkuIvpnaLnmoTor7fmsYLlnLDlnYDlkozlj4LmlbAKICAgICAgY29uc3QgdXJsID0gdGhpcy4kaHR0cFVybCArICcvdXNlci9nZXRVc2VyTmFtZVRvcDEwJzsKICAgICAgYXhpb3MKICAgICAgICAgIC5nZXQodXJsLCB7IHBhcmFtczogeyB1c2VyTmFtZTogcXVlcnlTdHJpbmcgfSB9KQogICAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgICAgICBjb25zdCB1c2VycyA9IHJlc3BvbnNlLmRhdGEubWFwKHVzZXIgPT4gKHsgdmFsdWU6IHVzZXIsIGxhYmVsOiB1c2VyIH0pKTsKICAgICAgICAgICAgY2FsbGJhY2sodXNlcnMpOwogICAgICAgICAgfSkKICAgICAgICAgIC5jYXRjaChlcnJvciA9PiB7CiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpOwogICAgICAgICAgICBjYWxsYmFjayhbXSk7CiAgICAgICAgICB9KTsKICB9LAogICAgcmVzZXRQYXJhbSgpIHsKICAgICAgdGhpcy5maWxlTmFtZSA9ICcnCiAgICAgIHRoaXMuc2VsZWN0ZWRUYWdzID1bXQogICAgfSwKICAgIGRvd25sb2FkUmVzdWx0KHJvdykgewogICAgICBjb25zb2xlLmxvZygi5YeG5aSH5LiL6L29IikKICAgICAgY29uc29sZS5sb2cocm93KQogICAgICBnZXRSZXN1bHQocm93LmZpbGVuYW1lKS50aGVuKHJlcyA9PiB7CiAgICAgICAgZmlsZURvd25sb2FkKHJlcy5kYXRhLCByb3cuZmlsZW5hbWUpOyAvLyDkvb/nlKhqcy1maWxlLWRvd25sb2Fk5p2l5o6l5pS25LqM6L+b5Yi25rWB54S25ZCO5LiL6L29CiAgICAgIH0pLmNhdGNoKGVyciA9PiB7CiAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcihlcnIpOwogICAgICB9KTsKICAgIH0sCiAgICBkZWwoaWQpIHsKICAgICAgdGhpcy4kYXhpb3MuZ2V0KHRoaXMuJGh0dHBVcmwgKyAnL2NvbXAvZGVsP2lkPScgKyBpZCkudGhlbihyZXMgPT4gcmVzLmRhdGEpLnRoZW4ocmVzID0+IHsKICAgICAgICBjb25zb2xlLmxvZyhyZXMpCiAgICAgICAgaWYgKHJlcy5jb2RlID09IDEpIHsKCiAgICAgICAgICB0aGlzLiRtZXNzYWdlKHsKICAgICAgICAgICAgbWVzc2FnZTogJ+aTjeS9nOaIkOWKn++8gScsCiAgICAgICAgICAgIHR5cGU6ICdzdWNjZXNzJwogICAgICAgICAgfSk7CiAgICAgICAgICB0aGlzLmxvYWRQb3N0KCkKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdGhpcy4kbWVzc2FnZSh7CiAgICAgICAgICAgIG1lc3NhZ2U6ICfmk43kvZzlpLHotKXvvIEnLAogICAgICAgICAgICB0eXBlOiAnZXJyb3InCiAgICAgICAgICB9KTsKICAgICAgICB9CgogICAgICB9KQogICAgfSwKICAgIC8vIHNoYXJlKHJvdyl7CiAgICAvLyAgICAgY29uc3QgaW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpOyAvLyDliJvlu7rkuIDkuKrpmpDol49pbnB1dO+8iOmHjeimge+8ge+8iQogICAgLy8gICAgIGlucHV0LnZhbHVlID0gInNoYXJlRnJvbSQiK3Jvdy51c2VyaWQrIiQiK3Jvdy5maWxldXJsOyAvLyDotYvlgLwKICAgIC8vICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGlucHV0KTsKICAgIC8vICAgICBpbnB1dC5zZWxlY3QoKTsgLy8g6YCJ5oup5a+56LGhCiAgICAvLyAgICAgaWYgKGRvY3VtZW50LmV4ZWNDb21tYW5kKCdjb3B5JykpIHsKICAgIC8vICAgICAgICAgZG9jdW1lbnQuZXhlY0NvbW1hbmQoJ2NvcHknKTsgLy8g5omn6KGM5rWP6KeI5Zmo5aSN5Yi25ZG95LukCiAgICAvLyAgICAgICAgIHRoaXMuJG1lc3NhZ2UoeyBtZXNzYWdlOiAn5aSN5Yi25oiQ5Yqf77yM6K+35Y+R6YCB57uZ5YW25LuW55So5oi3JywgdHlwZTogJ3N1Y2Nlc3MnIH0pOwogICAgLy8gICAgIH0KICAgIC8vICAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKGlucHV0KTsKICAgIC8vIH0sCiAgICAvLyBhY2NlcHRTaGFyZSgpewogICAgLy8gICAgIGNvbnN0IGZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKCk7CiAgICAvLyAgICAgZm9ybURhdGEuYXBwZW5kKCdzaGFyZVVybCcsIHRoaXMuc2hhcmVVcmwpOyAvLyDopoHkuIrkvKDnmoTmlofku7YKICAgIC8vICAgICBmb3JtRGF0YS5hcHBlbmQoJ3VzZXJJZCcsIHRoaXMudXNlci5pZCk7IC8vIOeUqOaIt2lkCiAgICAvLyAgICAgdGhpcy4kYXhpb3MucG9zdCh0aGlzLiRodHRwVXJsKycvY29tcC9zaGFyZScsIGZvcm1EYXRhKS50aGVuKHJlcz0+cmVzLmRhdGEpLnRoZW4ocmVzPT4gewogICAgLy8gICAgICAgICBjb25zb2xlLmxvZyhyZXMpCiAgICAvLyAgICAgICAgIGlmIChyZXMuY29kZSA9PSAxKSB7CiAgICAvLyAgICAgICAgIH0KICAgIC8vICAgICB9KQogICAgLy8gfSwKICAgIHNob3dTaGFyZURpYWxvZyhyb3cpIHsKICAgICAgdGhpcy5zaGFyZUZpbGUgPSByb3cKICAgICAgdGhpcy5zZWFyY2hWYWx1ZSA9ICcnCiAgICAgIHRoaXMuZGlhbG9nVmlzaWJsZSA9IHRydWUKICAgIH0sCiAgICBzaGFyZSgpIHsKICAgICAgLy8g5Zyo6L+Z6YeM5omn6KGM5YiG5Lqr5pON5L2cCiAgICAgIGNvbnNvbGUubG9nKHRoaXMuc2hhcmVGaWxlKQogICAgICB0aGlzLnNoYXJlRmlsZS5pZCA9IG51bGwKICAgICAgdGhpcy4kc2V0KHRoaXMuc2hhcmVGaWxlLCAndXNlck5hbWUnLCB0aGlzLnNlYXJjaFZhbHVlKQogICAgICB0aGlzLiRheGlvcy5wb3N0KHRoaXMuJGh0dHBVcmwgKyAnL2NvbXAvc2F2ZVNoYXJlJywgdGhpcy5zaGFyZUZpbGUpLnRoZW4ocmVzID0+IHJlcy5kYXRhKS50aGVuKHJlcyA9PiB7CiAgICAgICAgIGNvbnNvbGUubG9nKHJlcykKICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2Vzcygi5YiG5Lqr5oiQ5YqfIikKICAgICAgICAgICB0aGlzLnNlYXJjaFZhbHVlID0gJycKICAgICAgICAgIHRoaXMuc2hhcmVGaWxlID0gJycKICAgICAgfSkKICAgICAgdGhpcy5kaWFsb2dWaXNpYmxlID0gZmFsc2U7CiAgICB9LAogICAgc2VhcmNoVXNlcnMoKSB7CiAgICAgIGlmICh0aGlzLnNoYXJlVXNlck5hbWUudHJpbSgpKSB7CiAgICAgICAgdGhpcy4kYXhpb3MuZ2V0KGAke3RoaXMuJGh0dHBVcmx9L3VzZXIvc2VhcmNoP25hbWU9JHt0aGlzLnNoYXJlVXNlck5hbWUudHJpbSgpfWApLnRoZW4ocmVzID0+IHJlcy5kYXRhKS50aGVuKHJlcyA9PiB7CiAgICAgICAgICBpZiAocmVzICYmIHJlcy5sZW5ndGggPiAwKSB7CiAgICAgICAgICAgIGNvbnN0IHVzZXJMaXN0ID0gcmVzOwogICAgICAgICAgICB0aGlzLiRhdXRvY29tcGxldGUoJ+ivt+mAieaLqeimgeWIhuS6q+eahOeUqOaItycsIHVzZXJMaXN0LCB7CiAgICAgICAgICAgICAgY29uZmlybUJ1dHRvblRleHQ6ICfnoa7lrponLAogICAgICAgICAgICAgIGNhbmNlbEJ1dHRvblRleHQ6ICflj5bmtognLAogICAgICAgICAgICB9KS50aGVuKCh7IHZhbHVlIH0pID0+IHsKICAgICAgICAgICAgICAvLyDnlKjmiLfpgInmi6nlkI7mm7TmlrDpgInkuK3nmoTnlKjmiLdJRAogICAgICAgICAgICAgIHRoaXMuc2VsZWN0ZWRVc2VySWQgPSB2YWx1ZTsKICAgICAgICAgICAgfSkuY2F0Y2goKCkgPT4gewogICAgICAgICAgICAgIHRoaXMuc2VsZWN0ZWRVc2VySWQgPSBudWxsOyAvLyDnlKjmiLflj5bmtojpgInmi6nml7bmuIXnqbrpgInkuK3nmoTnlKjmiLdJRAogICAgICAgICAgICB9KTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHRoaXMuc2VsZWN0ZWRVc2VySWQgPSBudWxsOyAvLyDmnKrmib7liLDljLnphY3nlKjmiLfml7bmuIXnqbrpgInkuK3nmoTnlKjmiLdJRAogICAgICAgICAgICAvLyB0aGlzLiRtZXNzYWdlLndhcm5pbmcoJ+acquaJvuWIsOWMuemFjeeahOeUqOaItycpOwogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICB9CiAgICB9LAogICAgbG9hZFBvc3QoKSB7CiAgICAgIHRoaXMuJGF4aW9zLnBvc3QodGhpcy4kaHR0cFVybCArICcvY29tcC9saXN0UGFnZUMxJywgewogICAgICAgIHBhZ2VTaXplOiB0aGlzLnBhZ2VTaXplLAogICAgICAgIHBhZ2VOdW06IHRoaXMucGFnZU51bSwKICAgICAgICBwYXJhbTogewogICAgICAgICAgdXNlcklkOiB0aGlzLnVzZXIuaWQsCiAgICAgICAgICBmaWxlTmFtZTogdGhpcy5maWxlTmFtZSwKICAgICAgICAgIGxhYmVsOiB0aGlzLnNlbGVjdGVkVGFncwogICAgICAgIH0KICAgICAgfSkudGhlbihyZXMgPT4gcmVzLmRhdGEpLnRoZW4ocmVzID0+IHsKICAgICAgICBjb25zb2xlLmxvZyhyZXMpCiAgICAgICAgaWYgKHJlcy5jb2RlID09IDEpIHsKICAgICAgICAgIHRoaXMudGFibGVEYXRhID0gcmVzLmRhdGEKICAgICAgICAgIGNvbnNvbGUubG9nKHRoaXMudGFibGVEYXRhKQogICAgICAgICAgdGhpcy50b3RhbCA9IHJlcy50b3RhbAogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBhbGVydCgn6I635Y+W5pWw5o2u5aSx6LSlJykKICAgICAgICB9CgogICAgICB9KQogICAgfSwKICAgIGhhbmRsZVNpemVDaGFuZ2UodmFsKSB7CiAgICAgIGNvbnNvbGUubG9nKGDmr4/pobUgJHt2YWx9IOadoWApOwogICAgICB0aGlzLnBhZ2VOdW0gPSAxCiAgICAgIHRoaXMucGFnZVNpemUgPSB2YWwKICAgICAgdGhpcy5sb2FkUG9zdCgpCiAgICB9LAogICAgaGFuZGxlQ3VycmVudENoYW5nZSh2YWwpIHsKICAgICAgY29uc29sZS5sb2coYOW9k+WJjemhtTogJHt2YWx9YCk7CiAgICAgIHRoaXMucGFnZU51bSA9IHZhbAogICAgICB0aGlzLmxvYWRQb3N0KCkKICAgIH0sCiAgfSwKICBtb3VudGVkKCkgewogICAgdGhpcy5sb2FkUG9zdCgpCiAgfQoKfQo="},{"version":3,"sources":["Home.vue"],"names":[],"mappings":";AAufile":"Home.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <div style=\"margin-bottom: 5px;\">\n      <el-input v-model=\"fileName\" placeholder=\"请输入文件名\" suffix-icon=\"el-icon-search\" style=\"width: 200px;\"\n                @keyup.enter.native=\"loadPost\"></el-input>\n\n        <el-select v-model=\"selectedTags\" multiple placeholder=\"请选择文件标签\" style=\"margin-left: 5px;\">\n          <el-option v-for=\"tag in tags\" :key=\"tag\" :label=\"tag\" :value=\"tag\"></el-option>\n        </el-select>\n\n      <el-button type=\"primary\" style=\"margin-left: 5px;\" @click=\"loadPost\">查询</el-button>\n      <el-button type=\"success\" @click=\"resetParam\">重置</el-button>\n      <el-input v-model=\"shareUrl\" placeholder=\"请输入分享链接\" suffix-icon=\"el-icon-search\" style=\"width: 200px;\"\n                @keyup.enter.native=\"acceptShare\"></el-input>\n      <el-button type=\"success\" @click=\"acceptShare\">接收分享</el-button>\n    </div>\n    <el-table :data=\"tableData\"\n              :header-cell-style=\"{ background: '#f2f5fc', color: '#555555' }\"\n              border\n    >\n      <!--            <el-table-column prop=\"id\" label=\"ID\" width=\"60\">-->\n      <!--            </el-table-column>-->\n      <el-table-column prop=\"filename\" label=\"文件名\" width=\"300\">\n      </el-table-column>\n      <el-table-column prop=\"fileurl\" label=\"路径\">\n      </el-table-column>\n      <el-table-column prop=\"label\" label=\"标签\">\n      </el-table-column>\n\n      <el-table-column prop=\"operate\" label=\"操作\" width=\"210\">\n        <template slot-scope=\"scope\">\n          <el-button size=\"small\" type=\"success\" @click=\"downloadResult(scope.row)\">下载</el-button>\n          <el-button size=\"small\" type=\"success\" @click=\"showShareDialog(scope.row)\">分享</el-button>\n          <el-popconfirm\n              title=\"确定删除吗？\"\n              @confirm=\"del(scope.row.id)\"\n              style=\"margin-left: 5px;\"\n          >\n            <el-button slot=\"reference\" size=\"small\" type=\"danger\">删除</el-button>\n          </el-popconfirm>\n        </template>\n      </el-table-column>\n    </el-table>\n    <el-pagination\n        @size-change=\"handleSizeChange\"\n        @current-change=\"handleCurrentChange\"\n        :current-page=\"pageNum\"\n        :page-sizes=\"[5, 10, 20,30]\"\n        :page-size=\"pageSize\"\n        layout=\"total, sizes, prev, pager, next, jumper\"\n        :total=\"total\">\n    </el-pagination>\n    <el-dialog :visible.sync=\"dialogVisible\" title=\"分享\" width=\"20%\">\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogVisible = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"share\">确定</el-button>\n      </span>\n      <div>\n        <p>请输入要分享的用户：</p>\n        <el-autocomplete\n            v-model=\"searchValue\"\n            :fetch-suggestions=\"fetchUserSuggestions\"\n            placeholder=\"请输入用户名\"\n            :trigger-on-focus=\"false\"\n        ></el-autocomplete>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport fileDownload from \"js-file-download\";\nimport axios from \"axios\";\n\nfunction request(config) {\n  // 创建axios的实例\n  const instance = axios.create({\n    baseURL: 'http://localhost:8090', // 这个是后端的ip地址\n  });\n  return instance(config);\n}\n\nexport function getResult(resultfile) {\n  return request({\n    url: 'comp/getResult',\n    method: 'post',\n    responseType: 'arraybuffer',\n    data: {\n      resultfile: resultfile,\n      userId: JSON.parse(sessionStorage.getItem('CurUser')).id,\n    }\n  });\n}\n\nexport default {\n  name: \"Home\",\n  data() {\n    return {\n      shareFile:'',\n      selectedTags: [],\n      tags: [\"游戏\", \"学习\", \"学术\", \"娱乐\", \"工作\"],\n      searchValue: '',\n      user: JSON.parse(sessionStorage.getItem('CurUser')),\n      fileName: '',\n      dialogVisible:false,\n      shareUrl: '',\n      tableData: [],\n      pageNum: 1,\n      pageSize: 10,\n      total: 0,\n    }\n  },\n  methods: {\n    fetchUserSuggestions(queryString, callback) {\n      // 从后台获取用户名列表\n      // 请根据你的实际情况修改下面的请求地址和参数\n      const url = this.$httpUrl + '/user/getUserNameTop10';\n      axios\n          .get(url, { params: { userName: queryString } })\n          .then(response => {\n            const users = response.data.map(user => ({ value: user, label: user }));\n            callback(users);\n          })\n          .catch(error => {\n            console.error(error);\n            callback([]);\n          });\n  },\n    resetParam() {\n      this.fileName = ''\n      this.selectedTags =[]\n    },\n    downloadResult(row) {\n      console.log(\"准备下载\")\n      console.log(row)\n      getResult(row.filename).then(res => {\n        fileDownload(res.data, row.filename); // 使用js-file-download来接收二进制流然后下载\n      }).catch(err => {\n        this.$message.error(err);\n      });\n    },\n    del(id) {\n      this.$axios.get(this.$httpUrl + '/comp/del?id=' + id).then(res => res.data).then(res => {\n        console.log(res)\n        if (res.code == 1) {\n\n          this.$message({\n            message: '操作成功！',\n            type: 'success'\n          });\n          this.loadPost()\n        } else {\n          this.$message({\n            message: '操作失败！',\n            type: 'error'\n          });\n        }\n\n      })\n    },\n    // share(row){\n    //     const input = document.createElement('input'); // 创建一个隐藏input（重要！）\n    //     input.value = \"shareFrom$\"+row.userid+\"$\"+row.fileurl; // 赋值\n    //     document.body.appendChild(input);\n    //     input.select(); // 选择对象\n    //     if (document.execCommand('copy')) {\n    //         document.execCommand('copy'); // 执行浏览器复制命令\n    //         this.$message({ message: '复制成功，请发送给其他用户', type: 'success' });\n    //     }\n    //     document.body.removeChild(input);\n    // },\n    // acceptShare(){\n    //     const formData = new FormData();\n    //     formData.append('shareUrl', this.shareUrl); // 要上传的文件\n    //     formData.append('userId', this.user.id); // 用户id\n    //     this.$axios.post(this.$httpUrl+'/comp/share', formData).then(res=>res.data).then(res=> {\n    //         console.log(res)\n    //         if (res.code == 1) {\n    //         }\n    //     })\n    // },\n    showShareDialog(row) {\n      this.shareFile = row\n      this.searchValue = ''\n      this.dialogVisible = true\n    },\n    share() {\n      // 在这里执行分享操作\n      console.log(this.shareFile)\n      this.shareFile.id = null\n      this.$set(this.shareFile, 'userName', this.searchValue)\n      this.$axios.post(this.$httpUrl + '/comp/saveShare', this.shareFile).then(res => res.data).then(res => {\n         console.log(res)\n          this.$message.success(\"分享成功\")\n           this.searchValue = ''\n          this.shareFile = ''\n      })\n      this.dialogVisible = false;\n    },\n    searchUsers() {\n      if (this.shareUserName.trim()) {\n        this.$axios.get(`${this.$httpUrl}/user/search?name=${this.shareUserName.trim()}`).then(res => res.data).then(res => {\n          if (res && res.length > 0) {\n            const userList = res;\n            this.$autocomplete('请选择要分享的用户', userList, {\n              confirmButtonText: '确定',\n              cancelButtonText: '取消',\n            }).then(({ value }) => {\n              // 用户选择后更新选中的用户ID\n              this.selectedUserId = value;\n            }).catch(() => {\n              this.selectedUserId = null; // 用户取消选择时清空选中的用户ID\n            });\n          } else {\n            this.selectedUserId = null; // 未找到匹配用户时清空选中的用户ID\n            // this.$message.warning('未找到匹配的用户');\n          }\n        });\n      }\n    },\n    loadPost() {\n      this.$axios.post(this.$httpUrl + '/comp/listPageC1', {\n        pageSize: this.pageSize,\n        pageNum: this.pageNum,\n        param: {\n          userId: this.user.id,\n          fileName: this.fileName,\n          label: this.selectedTags\n        }\n      }).then(res => res.data).then(res => {\n        console.log(res)\n        if (res.code == 1) {\n          this.tableData = res.data\n          console.log(this.tableData)\n          this.total = res.total\n        } else {\n          alert('获取数据失败')\n        }\n\n      })\n    },\n    handleSizeChange(val) {\n      console.log(`每页 ${val} 条`);\n      this.pageNum = 1\n      this.pageSize = val\n      this.loadPost()\n    },\n    handleCurrentChange(val) {\n      console.log(`当前页: ${val}`);\n      this.pageNum = val\n      this.loadPost()\n    },\n  },\n  mounted() {\n    this.loadPost()\n  }\n\n}\n</script>\n\n<style scoped>\n\n</style>\n"]}]}